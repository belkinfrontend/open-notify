function initMap(){$.get("http://api.open-notify.org/iss-now.json",function(e){function t(){$.get("http://api.open-notify.org/iss-now.json",function(e){var t=parseFloat(e.iss_position.latitude),n=parseFloat(e.iss_position.longitude),o=new google.maps.LatLng(t,n);document.getElementById("out_location").innerHTML="longitude: "+t+", latitude: "+n,i.setPosition(o)})}var n=parseFloat(e.iss_position.longitude),o={lat:parseFloat(e.iss_position.latitude),lng:n},a=new google.maps.Map(document.getElementById("map"),{zoom:3,center:o}),i=new google.maps.Marker({position:o,map:a,title:"International Space Station",icon:"images/iss-marker.png"});t(),setInterval(t,5e3)})}function update(){var e=document.getElementById("out_time"),t=new Date,n=t.getHours();n<10&&(n="0"+n),e.children[0].innerHTML=n;var o=t.getMinutes();o<10&&(o="0"+o),e.children[1].innerHTML=o;var a=t.getSeconds();a<10&&(a="0"+a),e.children[2].innerHTML=a}function clockStart(){setInterval(update,1e3),update()}function peopleCount(){$.get("http://api.open-notify.org/astros.json",function(e){console.log(e.people),e.people.forEach(function(t){"ISS"==t.craft&&($("#out_people").append('<li><img src="images/person.svg">'+t.name+"</li>"),$("#total_people").html("Total amount: "+e.people.length+" people on ISS"))})})}var today=new Date,day=new Date,weekday=new Array(7);weekday[0]="Sunday",weekday[1]="Monday",weekday[2]="Tuesday",weekday[3]="Wednesday",weekday[4]="Thursday",weekday[5]="Friday",weekday[6]="Saturday";var timerId;clockStart();var d=new Date,month=new Array("Jan","Feb","Mar","Apr","May","June","July","Aug","Sep","Oct","Nov","Dec");document.getElementById("out_date").innerHTML=weekday[day.getDay()]+", "+d.getDate()+" "+month[d.getMonth()]+" "+d.getFullYear(),peopleCount();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcC5qcyIsImRhdGUuanMiLCJwZW9wbGUuanMiXSwibmFtZXMiOlsiaW5pdE1hcCIsIiQiLCJnZXQiLCJkYXRhIiwidXBkYXRlTWFya2VyIiwibmV3TGF0aXR1ZGUiLCJwYXJzZUZsb2F0IiwiaXNzX3Bvc2l0aW9uIiwibGF0aXR1ZGUiLCJuZXdMb25naXR1ZGUiLCJsb25naXR1ZGUiLCJsYXRMbmciLCJnb29nbGUiLCJtYXBzIiwiTGF0TG5nIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsIm1hcmtlciIsInNldFBvc2l0aW9uIiwiaW5pdGlhbExvbmd0aXR1ZGUiLCJsYXQiLCJsbmciLCJtYXAiLCJNYXAiLCJ6b29tIiwiY2VudGVyIiwiTWFya2VyIiwicG9zaXRpb24iLCJ0aXRsZSIsImljb24iLCJzZXRJbnRlcnZhbCIsInVwZGF0ZSIsImNsb2NrIiwiZGF0ZSIsIkRhdGUiLCJob3VycyIsImdldEhvdXJzIiwiY2hpbGRyZW4iLCJtaW51dGVzIiwiZ2V0TWludXRlcyIsInNlY29uZHMiLCJnZXRTZWNvbmRzIiwiY2xvY2tTdGFydCIsInBlb3BsZUNvdW50IiwiY29uc29sZSIsImxvZyIsInBlb3BsZSIsImZvckVhY2giLCJkIiwiYXBwZW5kIiwiaHRtbCIsImxlbmd0aCIsInRvZGF5IiwiZGF5Iiwid2Vla2RheSIsIkFycmF5IiwidGltZXJJZCIsIm1vbnRoIiwiZ2V0RGF5IiwiZ2V0RGF0ZSIsImdldE1vbnRoIiwiZ2V0RnVsbFllYXIiXSwibWFwcGluZ3MiOiJBQUFBLFNBQUFBLFVBRUFDLEVBQUFDLElBQUEsMENBQUEsU0FBQUMsR0FzQkEsU0FBQUMsSUFDQUgsRUFBQUMsSUFBQSwwQ0FDQSxTQUFBQyxHQUNBLElBQUFFLEVBQUFDLFdBQUFILEVBQUFJLGFBQUFDLFVBQ0FDLEVBQUFILFdBQUFILEVBQUFJLGFBQUFHLFdBQ0FDLEVBQUEsSUFBQUMsT0FBQUMsS0FBQUMsT0FBQVQsRUFBQUksR0FFQU0sU0FBQUMsZUFBQSxnQkFBQUMsVUFBQSxjQUFBWixFQUFBLGVBQUFJLEVBQ0FTLEVBQUFDLFlBQUFSLEtBN0JBLElBQUFTLEVBQUFkLFdBQUFILEVBQUFJLGFBQUFHLFdBSUFDLEdBQ0FVLElBSkFmLFdBQUFILEVBQUFJLGFBQUFDLFVBS0FjLElBQUFGLEdBR0FHLEVBQUEsSUFBQVgsT0FBQUMsS0FBQVcsSUFBQVQsU0FBQUMsZUFBQSxRQUNBUyxLQUFBLEVBQ0FDLE9BQUFmLElBR0FPLEVBQUEsSUFBQU4sT0FBQUMsS0FBQWMsUUFDQUMsU0FBQWpCLEVBQ0FZLElBQUFBLEVBQ0FNLE1BQUEsOEJBQ0FDLEtBaEJBLDBCQWdDQTFCLElBQ0EyQixZQUFBM0IsRUFBQSxPQ2xCQSxTQUFBNEIsU0FDQSxJQUFBQyxFQUFBbEIsU0FBQUMsZUFBQSxZQUNBa0IsRUFBQSxJQUFBQyxLQUVBQyxFQUFBRixFQUFBRyxXQUNBRCxFQUFBLEtBQUFBLEVBQUEsSUFBQUEsR0FDQUgsRUFBQUssU0FBQSxHQUFBckIsVUFBQW1CLEVBRUEsSUFBQUcsRUFBQUwsRUFBQU0sYUFDQUQsRUFBQSxLQUFBQSxFQUFBLElBQUFBLEdBQ0FOLEVBQUFLLFNBQUEsR0FBQXJCLFVBQUFzQixFQUVBLElBQUFFLEVBQUFQLEVBQUFRLGFBQ0FELEVBQUEsS0FBQUEsRUFBQSxJQUFBQSxHQUNBUixFQUFBSyxTQUFBLEdBQUFyQixVQUFBd0IsRUFHQSxTQUFBRSxhQUNBWixZQUFBQyxPQUFBLEtBQ0FBLFNDdkNBLFNBQUFZLGNBRUEzQyxFQUFBQyxJQUNBLHlDQUVBLFNBQUFDLEdBQ0EwQyxRQUFBQyxJQUFBM0MsRUFBQTRDLFFBRUE1QyxFQUFBLE9BQUE2QyxRQUFBLFNBQUFDLEdBRUEsT0FBQUEsRUFBQSxRQUVBaEQsRUFBQSxlQUFBaUQsT0FBQSxvQ0FBQUQsRUFBQSxLQUFBLFNBRUFoRCxFQUFBLGlCQUFBa0QsS0FBQSxpQkFBQWhELEVBQUE0QyxPQUFBSyxPQUFBLHVCRGRBLElBQUFDLE1BQUEsSUFBQWxCLEtBS0FtQixJQUFBLElBQUFuQixLQUNBb0IsUUFBQSxJQUFBQyxNQUFBLEdBQ0FELFFBQUEsR0FBQSxTQUNBQSxRQUFBLEdBQUEsU0FDQUEsUUFBQSxHQUFBLFVBQ0FBLFFBQUEsR0FBQSxZQUNBQSxRQUFBLEdBQUEsV0FDQUEsUUFBQSxHQUFBLFNBQ0FBLFFBQUEsR0FBQSxXQUtBLElBQUFFLFFBd0JBZCxhQUtBLElBQUFNLEVBQUEsSUFBQWQsS0FDQXVCLE1BQUEsSUFBQUYsTUFBQSxNQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsT0FDQSxPQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsT0FHQXpDLFNBQUFDLGVBQUEsWUFBQUMsVUFBQXNDLFFBQUFELElBQUFLLFVBQUEsS0FBQVYsRUFBQVcsVUFBQSxJQUFBRixNQUFBVCxFQUFBWSxZQUFBLElBQUFaLEVBQUFhLGNDaENBbEIiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpbml0TWFwKCkge1xyXG5cclxuICAgICQuZ2V0KCdodHRwOi8vYXBpLm9wZW4tbm90aWZ5Lm9yZy9pc3Mtbm93Lmpzb24nLCBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIHZhciBpbml0aWFsTG9uZ3RpdHVkZSA9IHBhcnNlRmxvYXQoZGF0YS5pc3NfcG9zaXRpb24ubG9uZ2l0dWRlKTtcclxuICAgICAgICB2YXIgaW5pdGlhbExhdGl0dWRlID0gcGFyc2VGbG9hdChkYXRhLmlzc19wb3NpdGlvbi5sYXRpdHVkZSk7XHJcbiAgICAgICAgdmFyIGltYWdlID0gJ2ltYWdlcy9pc3MtbWFya2VyLnBuZyc7XHJcblxyXG4gICAgICAgIHZhciBsYXRMbmcgPSB7XHJcbiAgICAgICAgICAgIGxhdDogaW5pdGlhbExhdGl0dWRlLFxyXG4gICAgICAgICAgICBsbmc6IGluaXRpYWxMb25ndGl0dWRlXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcCcpLCB7XHJcbiAgICAgICAgICAgIHpvb206IDMsXHJcbiAgICAgICAgICAgIGNlbnRlcjogbGF0TG5nXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHZhciBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGxhdExuZyxcclxuICAgICAgICAgICAgbWFwOiBtYXAsXHJcbiAgICAgICAgICAgIHRpdGxlOiAnSW50ZXJuYXRpb25hbCBTcGFjZSBTdGF0aW9uJyxcclxuICAgICAgICAgICAgaWNvbjogaW1hZ2VcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlTWFya2VyKCkge1xyXG4gICAgICAgICAgICAkLmdldCgnaHR0cDovL2FwaS5vcGVuLW5vdGlmeS5vcmcvaXNzLW5vdy5qc29uJyxcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3TGF0aXR1ZGUgPSBwYXJzZUZsb2F0KGRhdGEuaXNzX3Bvc2l0aW9uLmxhdGl0dWRlKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3TG9uZ2l0dWRlID0gcGFyc2VGbG9hdChkYXRhLmlzc19wb3NpdGlvbi5sb25naXR1ZGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBsYXRMbmcgPSBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKG5ld0xhdGl0dWRlLCBuZXdMb25naXR1ZGUpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm91dF9sb2NhdGlvblwiKS5pbm5lckhUTUwgPSBcImxvbmdpdHVkZTogXCIgKyBuZXdMYXRpdHVkZSArIFwiLCBcIiArIFwibGF0aXR1ZGU6IFwiICsgbmV3TG9uZ2l0dWRlO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmtlci5zZXRQb3NpdGlvbihsYXRMbmcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgXHJcbiAgICAgICAgdXBkYXRlTWFya2VyKCk7XHJcbiAgICAgICAgc2V0SW50ZXJ2YWwodXBkYXRlTWFya2VyLCA1MDAwKTtcclxuICAgIH0pO1xyXG5cclxuXHJcblxyXG5cclxufTsiLCJ2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpO1xyXG5cclxuLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm91dF9kYXRlXCIpLmlubmVySFRNTCA9IHRvZGF5O1xyXG5cclxuLy8gZ2V0IHdlZWtkYXlcclxudmFyIGRheT1uZXcgRGF0ZSgpO1xyXG52YXIgd2Vla2RheT1uZXcgQXJyYXkoNyk7XHJcbndlZWtkYXlbMF09XCJTdW5kYXlcIjtcclxud2Vla2RheVsxXT1cIk1vbmRheVwiO1xyXG53ZWVrZGF5WzJdPVwiVHVlc2RheVwiO1xyXG53ZWVrZGF5WzNdPVwiV2VkbmVzZGF5XCI7XHJcbndlZWtkYXlbNF09XCJUaHVyc2RheVwiO1xyXG53ZWVrZGF5WzVdPVwiRnJpZGF5XCI7XHJcbndlZWtkYXlbNl09XCJTYXR1cmRheVwiO1xyXG5cclxuXHJcblxyXG4vLyBnZXQgdGltZVxyXG52YXIgdGltZXJJZDtcclxuXHJcbiAgICBmdW5jdGlvbiB1cGRhdGUoKSB7XHJcbiAgICAgIHZhciBjbG9jayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdvdXRfdGltZScpO1xyXG4gICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XHJcblxyXG4gICAgICB2YXIgaG91cnMgPSBkYXRlLmdldEhvdXJzKCk7XHJcbiAgICAgIGlmIChob3VycyA8IDEwKSBob3VycyA9ICcwJyArIGhvdXJzO1xyXG4gICAgICBjbG9jay5jaGlsZHJlblswXS5pbm5lckhUTUwgPSBob3VycztcclxuXHJcbiAgICAgIHZhciBtaW51dGVzID0gZGF0ZS5nZXRNaW51dGVzKCk7XHJcbiAgICAgIGlmIChtaW51dGVzIDwgMTApIG1pbnV0ZXMgPSAnMCcgKyBtaW51dGVzO1xyXG4gICAgICBjbG9jay5jaGlsZHJlblsxXS5pbm5lckhUTUwgPSBtaW51dGVzO1xyXG5cclxuICAgICAgdmFyIHNlY29uZHMgPSBkYXRlLmdldFNlY29uZHMoKTtcclxuICAgICAgaWYgKHNlY29uZHMgPCAxMCkgc2Vjb25kcyA9ICcwJyArIHNlY29uZHM7XHJcbiAgICAgIGNsb2NrLmNoaWxkcmVuWzJdLmlubmVySFRNTCA9IHNlY29uZHM7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY2xvY2tTdGFydCgpIHtcclxuICAgICAgc2V0SW50ZXJ2YWwodXBkYXRlLCAxMDAwKTtcclxuICAgICAgdXBkYXRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvY2tTdGFydCgpO1xyXG5cclxuXHJcblxyXG4vL2dldCBtb250aFxyXG52YXIgZCA9IG5ldyBEYXRlKCk7XHJcbnZhciBtb250aD1uZXcgQXJyYXkoXCJKYW5cIixcIkZlYlwiLFwiTWFyXCIsXCJBcHJcIixcIk1heVwiLFwiSnVuZVwiLFxyXG5cIkp1bHlcIixcIkF1Z1wiLFwiU2VwXCIsXCJPY3RcIixcIk5vdlwiLFwiRGVjXCIpO1xyXG5cclxuLy8gb3V0cHV0XHJcbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwib3V0X2RhdGVcIikuaW5uZXJIVE1MID0gd2Vla2RheVtkYXkuZ2V0RGF5KCldICsgJywgJyArIGQuZ2V0RGF0ZSgpKyBcIiBcIiArIG1vbnRoW2QuZ2V0TW9udGgoKV0gKyBcIiBcIiArIGQuZ2V0RnVsbFllYXIoKTsiLCJmdW5jdGlvbiBwZW9wbGVDb3VudCgpIHtcclxuXHJcbiAgICAkLmdldChcclxuICAgICAgICBcImh0dHA6Ly9hcGkub3Blbi1ub3RpZnkub3JnL2FzdHJvcy5qc29uXCIsXHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEucGVvcGxlKTtcclxuXHJcbiAgICAgICAgICAgIGRhdGFbJ3Blb3BsZSddLmZvckVhY2goZnVuY3Rpb24gKGQpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoZFsnY3JhZnQnXSA9PSBcIklTU1wiKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJyNvdXRfcGVvcGxlJykuYXBwZW5kKCc8bGk+JyArICc8aW1nIHNyYz1cImltYWdlcy9wZXJzb24uc3ZnXCI+JyArIGRbJ25hbWUnXSArICc8L2xpPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICQoJyN0b3RhbF9wZW9wbGUnKS5odG1sKCdUb3RhbCBhbW91bnQ6ICcgKyBkYXRhLnBlb3BsZS5sZW5ndGggKyAnIHBlb3BsZSBvbiBJU1MnKTsgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgKTtcclxufTtcclxucGVvcGxlQ291bnQoKTsiXX0=
